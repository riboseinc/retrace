name: macOS

on:
  push:
    branches:
      - main
      - 'release/**'
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - '*.sh'
      - '.*'
      - '_*'
      - 'doc/**'
      - 'flake.lock'
      - 'nix/**'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
      - 'ci/before_install/*'
      - '!ci/before_install/darwin.sh'
      - 'ci/checkpatch*'
  pull_request:
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - '*.sh'
      - '.*'
      - '_*'
      - 'doc/**'
      - 'flake.lock'
      - 'nix/**'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
      - 'ci/before_install/*'
      - '!ci/before_install/darwin.sh'
      - 'ci/checkpatch*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, macos-11.0]
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up environment
        run: |
          echo CMOCKA_INSTALL="${HOME}/builds/cmocka-install" >> "${GITHUB_ENV}"
      - name: Install more prerequisites
        run: |
          ./ci/before_install.sh
          ./ci/install.sh cmocka libnereon
      - name: Set up more environment
        run: |
          # see: https://github.com/oracle/truffleruby/commit/2706c09e57c4c27fb6177a9e420a87c0befb9e70
          export OPENSSL_PREFIX="$(brew --prefix openssl@1.1)"
          export PKG_CONFIG_PATH="${OPENSSL_PREFIX}/lib/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}"
          export LDFLAGS="-L${OPENSSL_PREFIX}/lib"
          export CPPFLAGS="-I${OPENSSL_PREFIX}/include"
          export PATH="${OPENSSL_PREFIX}/bin:$PATH"
          for var in OPENSSL_PREFIX PKG_CONFIG_PATH LDFLAGS CPPFLAGS PATH; do echo "${var}=${!var}" | tee -a "${GITHUB_ENV}"; done
          cd /usr/local/include
          sudo ln -s "${OPENSSL_PREFIX}/include/openssl" .
      - name: Configure
        run: |
          ./autogen.sh
          ./configure --enable-tests
      - name: Build
        run: ./ci/main.sh
